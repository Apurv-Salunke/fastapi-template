services:
  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    depends_on:
      - redis
    volumes:
      - db:/var/lib/postgresql/data
      # ! Uncomment only if you have SQL scripts to run on container startup
      # - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - fastapi-network

  redis:
    image: redis:6-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    command: ["redis-server"]
    networks:
      - fastapi-network

  app:
    build: .
    restart: always
    container_name: fastapi-app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      ENVIRONMENT_NAME: "${ENVIRONMENT_NAME}" # !remove this & move to env file
    networks:
      - fastapi-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    # command: ['celery', '-A', 'app.app.celery', 'worker', '-l', 'info']
    command: ["worker"]
    depends_on:
      - redis
    environment:
      ENVIRONMENT_NAME: "${ENVIRONMENT_NAME}" # !remove this & move to env file
    networks:
      - fastapi-network

  # ! Uncomment only if you want to use celery flower (needs some fixing)
  # flower:
  #   image: mher/flower:0.9.7
  #   command: ["flower", "--broker=${REDIS_URL}/6", "--port=5555"]
  #   ports:
  #     - 5556:5555
  #   depends_on:
  #     - redis
  #     - worker
  #   networks:
  #     - fastapi-network

  # ! Uncomment only if you want to use locust
  locust-master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./loadtests:/mnt/locust
    command: -f /mnt/locust --master -H http://app:"${SERVER_PORT}"
    networks:
      - fastapi-network

  locust-worker:
    image: locustio/locust
    volumes:
      - ./loadtests:/mnt/locust
    command: -f /mnt/locust --worker --master-host locust-master
    networks:
      - fastapi-network

networks:
  fastapi-network:
    driver: bridge

volumes:
  db:
